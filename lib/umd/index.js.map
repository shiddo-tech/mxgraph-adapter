{"version":3,"file":"index.js","sources":["../../node_modules/style-inject/dist/style-inject.es.js","../../src/mxgraph/mxgraph.enums.js","../../src/utils/adapter.utils.js","../../src/utils/file.utils.js","../../src/mxgraph/mxgraph.mapper.js","../../src/mxgraph/mxgraph.import.js","../../src/mxgraph/mxgraph.export.js","../../src/mxgraph.toolbar.js"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","export const Application = {\n  GOVERNANCE: 'GOVERNANCE',\n  STUDIO: 'STUDIO',\n};\n\nexport const DiagramType = {\n  bpmn: 'bpmn',\n  process: 'process',\n};\n\nexport const FileExtension = {\n  MODELER: 'mdr',\n};\n\nexport const FileError = {\n  EMPTY_FILE: 'EMPTY_FILE',\n  INVALID_FILE: 'INVALID_FILE',\n  INVALID_DATA: 'INVALID_DATA',\n  CONTAIN_NO_CELLS: 'CONTAIN_NO_CELLS'\n};\n","import { xml2json, json2xml } from 'xml-js';\n\nexport function convertXmlToJson(xml, options = { compact: true, spaces: 4 }) {\n  if (!xml) {\n    return;\n  }\n\n  return JSON.parse(xml2json(xml, options));\n}\n\nexport function convertJsonToXml(json, options = { compact: true, spaces: 4 }) {\n  if (!json) {\n    return;\n  }\n\n  return json2xml(json, options);\n}\n\nexport function downloadFile({\n  filename,\n  content,\n  extension = 'xml',\n  type = 'application/xml',\n}) {\n  const blob = new Blob([content], { type });\n  const url = window.URL.createObjectURL(blob);\n\n  const linkElement = document.createElement('a');\n  linkElement.href = url;\n  linkElement.download = `${filename}.${extension}`;\n  linkElement.click();\n}\n\nexport function getXmlGraph(graph) {\n  const codec = new window.mxCodec();\n  const xmlModel = codec.encode(graph.getModel());\n  const rootElement = xmlModel.getElementsByTagName('root')[0];\n\n  rootElement.setAttribute('version', '1.1');\n\n  return xmlModel;\n}\n\nexport function getXmlTextGraph(graph) {\n  const xmlGrapah = getXmlGraph(graph);\n  return mxUtils.getXml(xmlGrapah);\n}\n","import { FileExtension } from '../mxgraph/mxgraph.enums';\n\nfunction removeElement(element) {\n  return element.parentElement.removeChild(element);\n}\n\nfunction readFile(event) {\n  return new Promise((resolve) => {\n    const fileInput = event.target;\n    const file = event.target.files[0];\n\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      removeElement(fileInput);\n      resolve(e.target.result);\n    };\n    reader.readAsText(file);\n  });\n}\n\nexport function openFile() {\n  return new Promise((resolve) => {\n    const fileInput = document.createElement('input');\n    fileInput.type = 'file';\n    fileInput.style.display = 'none';\n    fileInput.accept = `.${FileExtension.MODELER}`;\n\n    fileInput.onchange = async (event) => {\n      const fileContent = await readFile(event);\n      resolve(fileContent);\n    };\n\n    document.body.appendChild(fileInput);\n    fileInput.click();\n  });\n}\n","import { Application } from './mxgraph.enums';\n\nconst { GOVERNANCE, STUDIO } = Application;\n\nexport function mapCells({ mxCells, metadata, consumer }) {\n  // TODO Tratar metadata\n  const { app, diagramType, version } = metadata;\n\n  const sourceApp = app._text;\n  const targetApp = consumer;\n\n  if (sourceApp === GOVERNANCE && targetApp === STUDIO) {\n    const markersNotSupported = [\n      'markerPoint',\n      'marker-loop',\n      'marker-ad-hoc',\n      'marker-compensation',\n      'marker-sequential-mi',\n      'marker-parallel-mi',\n    ];\n\n    return mxCells\n      .filter((cell) => !markersNotSupported.includes(cell._attributes?.style))\n      .map((cell) => {\n        let { type, subType, style, value } = cell?._attributes || {};\n\n        const breakLine = '&#xA;';\n        const normalizeValue = value ? `${value}${breakLine}` : '';\n\n        if (type === 'TASK' && subType !== 'none') {\n          cell._attributes.style = 'task';\n          cell._attributes.subType = 'none';\n        }\n\n        if (\n          type === 'GATEWAY' &&\n          ['none', 'inclusive', 'event-based'].includes(subType)\n        ) {\n          cell._attributes.style = 'gateway-exclusive';\n          cell._attributes.subType = 'exclusive';\n        }\n\n        if (type === 'START_EVENT') {\n          if (!['none'].includes(subType)) {\n            cell._attributes.style = 'start-event';\n            cell._attributes.subType = 'none';\n          }\n\n          cell.mxGeometry._attributes.width = 32;\n          cell.mxGeometry._attributes.height = 32;\n        }\n\n        if (type === 'END_EVENT') {\n          cell._attributes.style = 'end-event-terminate';\n          cell._attributes.subType = 'none';\n          cell.mxGeometry._attributes.width = 32;\n          cell.mxGeometry._attributes.height = 32;\n        }\n\n        if (type === 'INTERMEDIATE_EVENT') {\n          cell._attributes.value = `${normalizeValue}${style}${breakLine}não suportado`;\n          cell._attributes.subType = 'none';\n          cell._attributes.style = 'task';\n          cell.mxGeometry._attributes.width = 125;\n          cell.mxGeometry._attributes.height = 82;\n        }\n\n        if (['DATA_STORE', 'WORKFLOW_INTERFACE'].includes(type)) {\n          cell._attributes.value = `${normalizeValue}${style}${breakLine}não suportado`;\n          cell._attributes.subType = 'none';\n          cell._attributes.style = 'task';\n          cell.mxGeometry._attributes.width = 125;\n          cell.mxGeometry._attributes.height = 82;\n        }\n\n        return cell;\n      });\n  }\n\n  return mxCells;\n}\n","// Enums\nimport { FileError } from './mxgraph.enums';\n\n// Utils\nimport { convertXmlToJson, convertJsonToXml } from '../utils/adapter.utils';\nimport * as FileUtils from '../utils/file.utils';\n\n// Mappers\nimport { mapCells } from './mxgraph.mapper';\n\nexport async function importMxGraphFile({ consumer }) {\n  const modelerContent = await FileUtils.openFile();\n  const jsonContent = convertXmlToJson(modelerContent);\n\n  if (!jsonContent) {\n    throw new Error(FileError.EMPTY_FILE);\n  }\n\n  const { metadata, mxGraphModel } = jsonContent.modeler || {};\n\n  const validMetadata =\n    metadata?.app && metadata?.diagramType && metadata?.version;\n\n  const validMxGraphModel = mxGraphModel?.root;\n\n  if (!validMetadata || !validMxGraphModel) {\n    throw new Error(FileError.INVALID_FILE);\n  }\n\n  const containCells = Object.keys(mxGraphModel.root.mxCell || {}).length;\n\n  if (!containCells) {\n    throw new Error(FileError.CONTAIN_NO_CELLS);\n  }\n\n  mxGraphModel.root.mxCell = mapCells({\n    mxCells: mxGraphModel.root.mxCell,\n    metadata,\n    consumer,\n  });\n\n  return convertJsonToXml({ mxGraphModel });\n}\n","// Enums\nimport { FileExtension, FileError } from './mxgraph.enums';\n\n// Utils\nimport {\n  convertXmlToJson,\n  convertJsonToXml,\n  downloadFile,\n} from '../utils/adapter.utils';\n\nexport function exportMxGraphFile({ xml = '', metadata }) {\n  let jsonContent = convertXmlToJson(xml);\n\n  if (!jsonContent) {\n    throw new Errorr(FileError.EMPTY_FILE);\n  }\n\n  const modelerContent = {\n    modeler: Object.assign({ metadata }, jsonContent),\n  };\n\n  const xmlContent = convertJsonToXml(modelerContent);\n\n  downloadFile({\n    filename: 'workflow',\n    content: xmlContent,\n    extension: FileExtension.MODELER,\n  });\n}\n","import { Application, DiagramType, FileError } from './mxgraph/mxgraph.enums';\nimport { getXmlTextGraph } from './utils/adapter.utils';\nimport { importMxGraphFile, exportMxGraphFile } from './mxgraph';\n\nconst { GOVERNANCE, STUDIO } = Application;\nconst { bpmn } = DiagramType;\n\nclass MxGraphToolbar {\n  app = null;\n  version = null;\n  diagramType = null;\n  graph = null;\n  renderGraph = null;\n  toolbar = null;\n  importButton = null;\n  exportButton = null;\n  notification = null;\n  messages = {\n    exportTitle: 'Exportar diagrama',\n    importTitle: 'Importar diagrama',\n    importTitleDisabled: 'Não foi possível importar o arquivo, pois o diagrama já foi iniciado',\n    emptyFile: 'Arquivo em branco',\n    invalidFile: 'Arquivo inválido',\n    containNoCells: 'Não foram encontradas células para serem importadas',\n    errorImportingFile: 'Erro ao importar arquivo',\n    errorExportingFile: 'Erro ao exportar arquivo',\n  };\n\n  init({\n    app,\n    version,\n    diagramType,\n    graph,\n    renderGraph,\n    notification,\n    customClass = '',\n    exportIcon = 'browser_updated',\n    importIcon = 'drive_folder_upload',\n    messages = {},\n  }) {\n    // com app é possível identificar se é STUDIO ou GOVERNANCE\n    this.app = app;\n    this.version = version;\n    this.diagramType = diagramType;\n    this.graph = graph;\n    this.notification = notification;\n    this.renderGraph = renderGraph;\n\n    this.messages = {\n      ...this.messages,\n      ...messages,\n    };\n\n    if (!this.graph) {\n      throw new Error('Graph not found');\n    }\n\n    if (!this.app) {\n      throw new Error('App not found');\n    }\n\n    if (!this.renderGraph) {\n      throw new Error('Render graph not found');\n    }\n\n    if (!this.notification) {\n      throw new Error('Notification system not found');\n    }\n\n    if (this.diagramType !== bpmn) {\n      console.warn(`Unsupported ${this.diagramType}`);\n      return;\n    }\n\n    this.createToolbar({\n      customClass,\n      exportIcon,\n      importIcon,\n    });\n  }\n\n  canImportFile() {\n    const cellsNumber = Object.keys(this.graph.model.cells).length;\n\n    // A estrutura do studio inicia com 2 células e o governance com 4\n    // não devemos permitir importar diagramas em diagramas iniciados/salvos\n    return (\n      (this.app === STUDIO && cellsNumber === 2) ||\n      (this.app === GOVERNANCE && cellsNumber === 4)\n    );\n  }\n\n  createToolbar({ customClass, exportIcon, importIcon }) {\n    this.toolbar = document.createElement('div');\n    this.toolbar.classList.add('mxgraph-toolbar');\n\n    if (customClass) {\n      this.toolbar.classList.add(customClass);\n    }\n\n    const shouldImportFile = this.canImportFile();\n\n    this.importButton = this.createButton({\n      title: shouldImportFile\n        ? this.messages.importTitle\n        : this.messages.importTitleDisabled,\n      icon: importIcon,\n      className: 'import-button',\n      disabled: !shouldImportFile,\n    });\n\n    this.toolbar.appendChild(this.importButton);\n\n    this.importButton.addEventListener(\n      'click',\n      this.onClickImportButton.bind(this)\n    );\n\n    if (this.app !== STUDIO) {\n      this.exportButton = this.createButton({\n        title: this.messages.exportTitle,\n        icon: exportIcon,\n        className: 'export-button',\n      });\n\n      this.toolbar.appendChild(this.exportButton);\n\n      this.exportButton.addEventListener(\n        'click',\n        this.onClickExportButton.bind(this)\n      );\n    }\n\n    document.body.appendChild(this.toolbar);\n  }\n\n  createButton({ title, icon, disabled = false }) {\n    const button = document.createElement('button');\n    button.title = title;\n    button.classList.add('btn');\n    button.innerHTML = `<i class=\"material-icons\">${icon}</i>`;\n    button.disabled = disabled;\n\n    return button;\n  }\n\n  async onClickImportButton() {\n    try {\n      if (!this.canImportFile()) {\n        this.showError(this.messages.importTitleDisabled);\n        return;\n      }\n\n      const modelerXml = await importMxGraphFile({\n        consumer: this.app,\n      });\n\n      this.renderGraph(modelerXml);\n    } catch (error) {\n      let message = this.messages.errorImportingFile;\n\n      if (error.message === FileError.EMPTY_FILE) {\n        message = this.messages.emptyFile || message;\n      }\n\n      if (error.message === FileError.INVALID_FILE) {\n        message = this.messages.invalidFile || message;\n      }\n\n      if (error.message === FileError.CONTAIN_NO_CELLS) {\n        message = this.messages.containNoCells || message;\n      }\n\n      this.showError(message);\n    }\n  }\n\n  showError(message) {\n    this.notification.error({\n      position: 'topRight',\n      timeout: 1000 * 4,\n      progressBar: true,\n      message,\n    });\n  }\n\n  onClickExportButton() {\n    try {\n      const xml = getXmlTextGraph(this.graph);\n      const metadata = {\n        app: this.app,\n        version: this.version,\n        diagramType: this.diagramType,\n      };\n\n      exportMxGraphFile({ xml, metadata });\n    } catch (error) {\n      this.notification.error({\n        position: 'topRight',\n        timeout: 1000 * 4,\n        progressBar: true,\n        message: this.messages.errorExportingFile,\n      });\n    }\n  }\n}\n\nexport default new MxGraphToolbar();\n"],"names":["css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","Application","FileExtension","FileError","convertXmlToJson","xml","options","arguments","length","undefined","compact","spaces","JSON","parse","xml2json","convertJsonToXml","json","json2xml","getXmlTextGraph","graph","xmlGrapah","xmlModel","window","mxCodec","encode","getModel","setAttribute","getXmlGraph","mxUtils","getXml","readFile","event","Promise","resolve","fileInput","target","file","files","reader","FileReader","onload","e","element","parentElement","removeChild","result","readAsText","openFile","display","accept","concat","onchange","_ref","_asyncToGenerator","_regeneratorRuntime","mark","fileContent","wrap","_context","prev","next","sent","stop","_callee","_x","apply","this","body","click","GOVERNANCE","STUDIO","mapCells","mxCells","metadata","consumer","app","diagramType","version","_text","markersNotSupported","filter","cell","_cell$_attributes","includes","_attributes","map","_ref2","subType","value","breakLine","normalizeValue","mxGeometry","width","height","importMxGraphFile","_importMxGraphFile","modelerContent","jsonContent","mxGraphModel","validMetadata","validMxGraphModel","FileUtils","Error","modeler","root","Object","keys","mxCell","abrupt","exportMxGraphFile","_ref$xml","Errorr","filename","content","_ref$extension","extension","_ref$type","blob","Blob","url","URL","createObjectURL","linkElement","href","download","downloadFile","assign","MxGraphToolbar","_classCallCheck","_defineProperty","exportTitle","importTitle","importTitleDisabled","emptyFile","invalidFile","containNoCells","errorImportingFile","errorExportingFile","_onClickImportButton","key","renderGraph","notification","_ref$customClass","customClass","_ref$exportIcon","exportIcon","_ref$importIcon","importIcon","_ref$messages","messages","_objectSpread","createToolbar","console","warn","cellsNumber","model","cells","toolbar","classList","add","shouldImportFile","canImportFile","importButton","createButton","title","icon","className","disabled","addEventListener","onClickImportButton","bind","exportButton","onClickExportButton","_ref3","_ref3$disabled","button","innerHTML","modelerXml","message","showError","t0","error","position","timeout","progressBar","mxgraph_toolbar"],"mappings":"4rQAAA,SAAqBA,EAAKC,QACX,IAARA,IAAiBA,EAAM,CAAA,GAC5B,IAAIC,EAAWD,EAAIC,SAEnB,GAAKF,GAA2B,oBAAbG,SAAnB,CAEA,IAAIC,EAAOD,SAASC,MAAQD,SAASE,qBAAqB,QAAQ,GAC9DC,EAAQH,SAASI,cAAc,SACnCD,EAAME,KAAO,WAEI,QAAbN,GACEE,EAAKK,WACPL,EAAKM,aAAaJ,EAAOF,EAAKK,YAKhCL,EAAKO,YAAYL,GAGfA,EAAMM,WACRN,EAAMM,WAAWC,QAAUb,EAE3BM,EAAMK,YAAYR,SAASW,eAAed,GAnBY,CAqB1D,wwBCzBO,IAAMe,EACC,aADDA,EAEH,SAQGC,EACF,MAGEC,EACC,aADDA,EAEG,eAFHA,EAIO,mBChBb,SAASC,EAAiBC,GAA6C,IAAxCC,EAAUC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAA,CAAEG,SAAS,EAAMC,OAAQ,GACvE,GAAKN,EAIL,OAAOO,KAAKC,MAAMC,EAAAA,SAAST,EAAKC,GAClC,CAEO,SAASS,EAAiBC,GAA8C,IAAxCV,EAAUC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAA,CAAEG,SAAS,EAAMC,OAAQ,GACxE,GAAKK,EAIL,OAAOC,EAAQA,SAACD,EAAMV,EACxB,CA2BO,SAASY,EAAgBC,GAC9B,IAAMC,EAXD,SAAqBD,GAC1B,IACME,GADQ,IAAIC,OAAOC,SACFC,OAAOL,EAAMM,YAKpC,OAJoBJ,EAAS9B,qBAAqB,QAAQ,GAE9CmC,aAAa,UAAW,OAE7BL,CACT,CAGoBM,CAAYR,GAC9B,OAAOS,QAAQC,OAAOT,EACxB,CCxCA,SAASU,EAASC,GAChB,OAAO,IAAIC,SAAQ,SAACC,GAClB,IAAMC,EAAYH,EAAMI,OAClBC,EAAOL,EAAMI,OAAOE,MAAM,GAE1BC,EAAS,IAAIC,WACnBD,EAAOE,OAAS,SAACC,GAVrB,IAAuBC,KAWHR,GAVHS,cAAcC,YAAYF,GAWrCT,EAAQQ,EAAEN,OAAOU,SAEnBP,EAAOQ,WAAWV,EACpB,GACF,CAEO,SAASW,IACd,OAAO,IAAIf,SAAQ,SAACC,GAClB,IAAMC,EAAY7C,SAASI,cAAc,SACzCyC,EAAUxC,KAAO,OACjBwC,EAAU1C,MAAMwD,QAAU,OAC1Bd,EAAUe,OAAM,IAAAC,OAAOhD,GAEvBgC,EAAUiB,SAAQ,WAAA,IAAAC,EAAAC,EAAAC,IAAAC,MAAG,WAAOxB,GAAK,IAAAyB,EAAA,OAAAF,IAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAE,KAAA,EACL9B,EAASC,GAAM,KAAA,EAAnCyB,EAAWE,EAAAG,KACjB5B,EAAQuB,GAAa,KAAA,EAAA,IAAA,MAAA,OAAAE,EAAAI,OAAA,GAAAC,EACtB,KAAA,OAAA,SAAAC,GAAA,OAAAZ,EAAAa,MAAAC,KAAA3D,UAAA,CAAA,CAHiB,GAKlBlB,SAAS8E,KAAKtE,YAAYqC,GAC1BA,EAAUkC,OACZ,GACF,CCjCA,IAAQC,EAAuBpE,EAAXqE,EAAWrE,EAExB,SAASsE,EAA0CnB,GAAA,IAA/BoB,IAAAA,QAASC,IAAAA,SAAUC,IAAAA,SAEpCC,EAA8BF,EAA9BE,IAKR,GALsCF,EAAzBG,YAAyBH,EAAZI,QAERF,EAAIG,QAGJT,GAFAK,IAE4BJ,EAAQ,CACpD,IAAMS,EAAsB,CAC1B,cACA,cACA,gBACA,sBACA,uBACA,sBAGF,OAAOP,EACJQ,QAAO,SAACC,GAAI,IAAAC,EAAA,OAAMH,EAAoBI,SAAyB,QAAjBD,EAACD,EAAKG,mBAAW,IAAAF,OAAA,EAAhBA,EAAkB1F,MAAM,IACvE6F,KAAI,SAACJ,GACJ,IAAsCK,GAAAL,aAAI,EAAJA,EAAMG,cAAe,CAAE,EAAvD1F,IAAAA,KAAM6F,IAAAA,QAAS/F,IAAAA,MAAOgG,IAAAA,MAEtBC,EAAY,QACZC,EAAiBF,EAAK,GAAAtC,OAAMsC,GAAQC,OAAAA,GAAc,GAgDxD,MA9Ca,SAAT/F,GAA+B,SAAZ6F,IACrBN,EAAKG,YAAY5F,MAAQ,OACzByF,EAAKG,YAAYG,QAAU,QAIlB,YAAT7F,GACA,CAAC,OAAQ,YAAa,eAAeyF,SAASI,KAE9CN,EAAKG,YAAY5F,MAAQ,oBACzByF,EAAKG,YAAYG,QAAU,aAGhB,gBAAT7F,IACG,CAAC,QAAQyF,SAASI,KACrBN,EAAKG,YAAY5F,MAAQ,cACzByF,EAAKG,YAAYG,QAAU,QAG7BN,EAAKU,WAAWP,YAAYQ,MAAQ,GACpCX,EAAKU,WAAWP,YAAYS,OAAS,IAG1B,cAATnG,IACFuF,EAAKG,YAAY5F,MAAQ,sBACzByF,EAAKG,YAAYG,QAAU,OAC3BN,EAAKU,WAAWP,YAAYQ,MAAQ,GACpCX,EAAKU,WAAWP,YAAYS,OAAS,IAG1B,uBAATnG,IACFuF,EAAKG,YAAYI,MAAK,GAAAtC,OAAMwC,GAAiBlG,OAAAA,GAAQiG,OAAAA,EAAwB,iBAC7ER,EAAKG,YAAYG,QAAU,OAC3BN,EAAKG,YAAY5F,MAAQ,OACzByF,EAAKU,WAAWP,YAAYQ,MAAQ,IACpCX,EAAKU,WAAWP,YAAYS,OAAS,IAGnC,CAAC,aAAc,sBAAsBV,SAASzF,KAChDuF,EAAKG,YAAYI,MAAK,GAAAtC,OAAMwC,GAAiBlG,OAAAA,GAAQiG,OAAAA,EAAwB,iBAC7ER,EAAKG,YAAYG,QAAU,OAC3BN,EAAKG,YAAY5F,MAAQ,OACzByF,EAAKU,WAAWP,YAAYQ,MAAQ,IACpCX,EAAKU,WAAWP,YAAYS,OAAS,IAGhCZ,CACT,GACJ,CAEA,OAAOT,CACT,CCtEA,SAAsBsB,EAAiB9B,GAAA,OAAA+B,EAAA9B,MAAAC,KAAA3D,UAAA,CAgCtC,SAAAwF,IAAA,OAAAA,EAhCM1C,EAAAC,IAAAC,MAAA,SAAAQ,EAAAX,GAAA,IAAAsB,EAAAsB,EAAAC,EAAAX,EAAAb,EAAAyB,EAAAC,EAAAC,EAAA,OAAA9C,IAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAA2C,OAARc,IAAAA,SAAQhB,EAAAE,KAAA,EACnByC,IAAoB,KAAA,EACG,GAD9CL,EAActC,EAAAG,KACdoC,EAAc7F,EAAiB4F,GAErB,CAAAtC,EAAAE,KAAA,EAAA,KAAA,CAAA,MACR,IAAI0C,MAAMnG,GAAqB,KAAA,EAQK,GARLmF,EAGJW,EAAYM,SAAW,GAAlD9B,EAAAA,EAAAA,SAAUyB,IAAAA,aAEZC,GACJ1B,eAAAA,EAAUE,OAAOF,aAAAA,EAAAA,EAAUG,eAAeH,aAAQ,EAARA,EAAUI,SAEhDuB,EAAoBF,aAAAA,EAAAA,EAAcM,KAEnCL,GAAkBC,EAAiB,CAAA1C,EAAAE,KAAA,GAAA,KAAA,CAAA,MAChC,IAAI0C,MAAMnG,GAAuB,KAAA,GAG8B,GAAlDsG,OAAOC,KAAKR,EAAaM,KAAKG,QAAU,CAAA,GAAInG,OAEhD,CAAAkD,EAAAE,KAAA,GAAA,KAAA,CAAA,MACT,IAAI0C,MAAMnG,GAA2B,KAAA,GAO1C,OAJH+F,EAAaM,KAAKG,OAASpC,EAAS,CAClCC,QAAS0B,EAAaM,KAAKG,OAC3BlC,SAAAA,EACAC,SAAAA,IACChB,EAAAkD,OAAA,SAEI7F,EAAiB,CAAEmF,aAAAA,KAAe,KAAA,GAAA,IAAA,MAAA,OAAAxC,EAAAI,OAAA,GAAAC,EAC1C,MAAAE,MAAAC,KAAA3D,UAAA,CChCM,SAASsG,EAA0CzD,GAAA,IAAA0D,EAAA1D,EAAtB/C,IAAAA,aAAM,GAAEyG,EAAErC,IAAAA,SACxCwB,EAAc7F,EAAiBC,GAEnC,IAAK4F,EACH,MAAM,IAAIc,OAAO5G,IJId,SAKJiD,GAAA,IAJD4D,IAAAA,SACAC,IAAAA,QAAOC,EAAA9D,EACP+D,UAAAA,aAAY,MAAKD,EAAAE,EAAAhE,EACjB1D,KAEM2H,EAAO,IAAIC,KAAK,CAACL,GAAU,CAAEvH,gBAF5B,kBAAiB0H,IAGlBG,EAAMjG,OAAOkG,IAAIC,gBAAgBJ,GAEjCK,EAAcrI,SAASI,cAAc,KAC3CiI,EAAYC,KAAOJ,EACnBG,EAAYE,SAAQ,GAAA1E,OAAM8D,EAAQ,KAAA9D,OAAIiE,GACtCO,EAAYtD,OACd,CIREyD,CAAa,CACXb,SAAU,WACVC,QAJiBlG,EAJI,CACrBwF,QAASE,OAAOqB,OAAO,CAAErD,SAAAA,GAAYwB,KAQrCkB,UAAWjH,GAEf,CCxBA,IAAQmE,EAAuBpE,EAAXqE,EAAWrE,EAGzB8H,EAAc,WAAA,SAAAA,iGAAAC,CAAA9D,KAAA6D,GAAAE,EAAA/D,KAAA,MACZ,MAAI+D,EAAA/D,KAAA,UACA,MAAI+D,EAAA/D,KAAA,cACA,MAAI+D,EAAA/D,KAAA,QACV,MAAI+D,EAAA/D,KAAA,cACE,MAAI+D,EAAA/D,KAAA,UACR,MAAI+D,EAAA/D,KAAA,eACC,MAAI+D,EAAA/D,KAAA,eACJ,MAAI+D,EAAA/D,KAAA,eACJ,MAAI+D,EACR/D,KAAA,WAAA,CACTgE,YAAa,oBACbC,YAAa,oBACbC,oBAAqB,uEACrBC,UAAW,oBACXC,YAAa,mBACbC,eAAgB,sDAChBC,mBAAoB,2BACpBC,mBAAoB,4BACrB,WAwHDC,EA0DC,SAlLAX,IAAA,CAAA,CAAAY,IAAA,OAAAnD,MAED,SAWGpC,GAAA,IAVDuB,IAAAA,IACAE,IAAAA,QACAD,IAAAA,YACAzD,IAAAA,MACAyH,IAAAA,YACAC,IAAAA,aAAYC,EAAA1F,EACZ2F,YAAAA,aAAc,GAAED,EAAAE,EAAA5F,EAChB6F,WAAAA,aAAa,kBAAiBD,EAAAE,EAAA9F,EAC9B+F,WAAAA,aAAa,sBAAqBD,EAAAE,EAAAhG,EAClCiG,SAAAA,OAAQ,IAAAD,EAAG,CAAA,EAAEA,EAeb,GAZAlF,KAAKS,IAAMA,EACXT,KAAKW,QAAUA,EACfX,KAAKU,YAAcA,EACnBV,KAAK/C,MAAQA,EACb+C,KAAK2E,aAAeA,EACpB3E,KAAK0E,YAAcA,EAEnB1E,KAAKmF,SACAC,EAAAA,EAAA,CAAA,EAAApF,KAAKmF,UACLA,IAGAnF,KAAK/C,MACR,MAAM,IAAImF,MAAM,mBAGlB,IAAKpC,KAAKS,IACR,MAAM,IAAI2B,MAAM,iBAGlB,IAAKpC,KAAK0E,YACR,MAAM,IAAItC,MAAM,0BAGlB,IAAKpC,KAAK2E,aACR,MAAM,IAAIvC,MAAM,iCN5Dd,SM+DApC,KAAKU,YAKTV,KAAKqF,cAAc,CACjBR,YAAAA,EACAE,WAAAA,EACAE,WAAAA,IAPAK,QAAQC,KAAI,eAAAvG,OAAgBgB,KAAKU,aASrC,GAAC,CAAA+D,IAAA,gBAAAnD,MAED,WACE,IAAMkE,EAAcjD,OAAOC,KAAKxC,KAAK/C,MAAMwI,MAAMC,OAAOpJ,OAIxD,OACG0D,KAAKS,MAAQL,GAA0B,IAAhBoF,GACvBxF,KAAKS,MAAQN,GAA8B,IAAhBqF,CAEhC,GAAC,CAAAf,IAAA,gBAAAnD,MAED,SAAuDF,GAAA,IAAvCyD,IAAAA,YAAaE,IAAAA,WAAYE,IAAAA,WACvCjF,KAAK2F,QAAUxK,SAASI,cAAc,OACtCyE,KAAK2F,QAAQC,UAAUC,IAAI,mBAEvBhB,GACF7E,KAAK2F,QAAQC,UAAUC,IAAIhB,GAG7B,IAAMiB,EAAmB9F,KAAK+F,gBAE9B/F,KAAKgG,aAAehG,KAAKiG,aAAa,CACpCC,MAAOJ,EACH9F,KAAKmF,SAASlB,YACdjE,KAAKmF,SAASjB,oBAClBiC,KAAMlB,EACNmB,UAAW,gBACXC,UAAWP,IAGb9F,KAAK2F,QAAQhK,YAAYqE,KAAKgG,cAE9BhG,KAAKgG,aAAaM,iBAChB,QACAtG,KAAKuG,oBAAoBC,KAAKxG,OAG5BA,KAAKS,MAAQL,IACfJ,KAAKyG,aAAezG,KAAKiG,aAAa,CACpCC,MAAOlG,KAAKmF,SAASnB,YACrBmC,KAAMpB,EACNqB,UAAW,kBAGbpG,KAAK2F,QAAQhK,YAAYqE,KAAKyG,cAE9BzG,KAAKyG,aAAaH,iBAChB,QACAtG,KAAK0G,oBAAoBF,KAAKxG,QAIlC7E,SAAS8E,KAAKtE,YAAYqE,KAAK2F,QACjC,GAAC,CAAAlB,IAAA,eAAAnD,MAED,SAAgDqF,GAAA,IAAjCT,IAAAA,MAAOC,IAAAA,KAAIS,EAAAD,EAAEN,SAAAA,cAAgBO,EACpCC,EAAS1L,SAASI,cAAc,UAMtC,OALAsL,EAAOX,MAAQA,EACfW,EAAOjB,UAAUC,IAAI,OACrBgB,EAAOC,UAAyCX,6BAAAA,OAAAA,EAAU,QAC1DU,EAAOR,SAAWA,EAEXQ,CACT,GAAC,CAAApC,IAAA,sBAAAnD,OAEDkD,EAAArF,EAAAC,IAAAC,MAAA,SAAAQ,IAAA,IAAAkH,EAAAC,EAAA,OAAA5H,IAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,GAAAF,EAAAC,KAAA,EAESO,KAAK+F,gBAAe,CAAAvG,EAAAE,KAAA,EAAA,KAAA,CAC2B,OAAlDM,KAAKiH,UAAUjH,KAAKmF,SAASjB,qBAAqB1E,EAAAkD,OAAA,UAAA,KAAA,EAAA,OAAAlD,EAAAE,KAAA,EAI3BkC,EAAkB,CACzCpB,SAAUR,KAAKS,MACf,KAAA,EAFIsG,EAAUvH,EAAAG,KAIhBK,KAAK0E,YAAYqC,GAAYvH,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAAF,EAAAC,KAAA,GAAAD,EAAA0H,GAAA1H,EAAA,MAAA,GAEzBwH,EAAUhH,KAAKmF,SAASb,mBAExB9E,KAAMwH,UAAY/K,IACpB+K,EAAUhH,KAAKmF,SAAShB,WAAa6C,GAGnCxH,KAAMwH,UAAY/K,IACpB+K,EAAUhH,KAAKmF,SAASf,aAAe4C,GAGrCxH,KAAMwH,UAAY/K,IACpB+K,EAAUhH,KAAKmF,SAASd,gBAAkB2C,GAG5ChH,KAAKiH,UAAUD,GAAS,KAAA,GAAA,IAAA,MAAA,OAAAxH,EAAAI,OAAA,GAAAC,EAAAG,KAAA,CAAA,CAAA,EAAA,KAE3B,KAAA,WAAA,OAAAwE,EAAAzE,MAAAC,KAAA3D,UAAA,IAAA,CAAAoI,IAAA,YAAAnD,MAED,SAAU0F,GACRhH,KAAK2E,aAAawC,MAAM,CACtBC,SAAU,WACVC,QAAS,IACTC,aAAa,EACbN,QAAAA,GAEJ,GAAC,CAAAvC,IAAA,sBAAAnD,MAED,WACE,IAQEqB,EAAkB,CAAExG,IAPRa,EAAgBgD,KAAK/C,OAORsD,SANR,CACfE,IAAKT,KAAKS,IACVE,QAASX,KAAKW,QACdD,YAAaV,KAAKU,cAWtB,CAPE,MAAOyG,GACPnH,KAAK2E,aAAawC,MAAM,CACtBC,SAAU,WACVC,QAAS,IACTC,aAAa,EACbN,QAAShH,KAAKmF,SAASZ,oBAE3B,CACF,qFAACV,CAAA,CArMiB,GAwML0D,EAAA,IAAI1D"}